From: <postbox@lisdatacenter.org>
Subject: job 968713 it
Date: June 11, 2022 at 6:56:39 PM GMT+2
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        
  Use of the data in the LUXEMBOURG INCOME STUDY DATABASE is governed by
  regulations which do not allow copying or further distribution of the 
  survey microdata.                                                     

  Anyone violating these regulations will lose all privileges to the    
  databases and may be subject to prosecution under the law. In addition,
  any attempt to circumvent the LIS processing system or unauthorized entry
  into the LIS computing system will result in prosecution.             

  All papers written using the LUXEMBOURG INCOME STUDY DATABASE must be 
  submitted for entry into the Working Papers Series.                   
  Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is",  
+            "in", "ie", "il", "it", "jp", "lt", "lu", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn") 
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(67, 69, 71, 73:75, 78:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("it") 
[1] "Loading dataset it86h..."
it86h,market_hh,0.489,0.0064,200
it86h,market_sqrt,0.4192,0.0057,200
it86h,market_pc,0.4384,0.006,200
it86h,market_oecdm,0.4232,0.0067,200
it86h,market_ae,0.4283,0.0065,200
it86h,gross_hh,0.3413,0.0049,200
it86h,gross_sqrt,0.3075,0.0053,200
it86h,gross_pc,0.3238,0.0046,200
it86h,gross_oecdm,0.3048,0.0048,200
it86h,gross_ae,0.3088,0.0049,200
it86h,disp_hh,0.3413,0.0048,200
it86h,disp_sqrt,0.3075,0.005,200
it86h,disp_pc,0.3238,0.0046,200
it86h,disp_oecdm,0.3048,0.0049,200
it86h,disp_ae,0.3088,0.0053,200
it86h,con_hh,NaN,NA,200
it86h,con_sqrt,NaN,NA,200
it86h,con_pc,NaN,NA,200
it86h,con_oecdm,NaN,NA,200
it86h,con_ae,NaN,NA,200
[1] "Loading dataset it87h..."
it87h,market_hh,0.5285,0.0071,200
it87h,market_sqrt,0.4555,0.0063,200
it87h,market_pc,0.4725,0.0058,200
it87h,market_oecdm,0.4563,0.0062,200
it87h,market_ae,0.4615,0.0071,200
it87h,gross_hh,0.3702,0.0048,200
it87h,gross_sqrt,0.3344,0.005,200
it87h,gross_pc,0.3455,0.0046,200
it87h,gross_oecdm,0.3307,0.0043,200
it87h,gross_ae,0.3338,0.0047,200
it87h,disp_hh,0.3702,0.0051,200
it87h,disp_sqrt,0.3344,0.0044,200
it87h,disp_pc,0.3455,0.0047,200
it87h,disp_oecdm,0.3307,0.0045,200
it87h,disp_ae,0.3338,0.0047,200
it87h,con_hh,0.3293,0.0048,200
it87h,con_sqrt,0.2877,0.0046,200
it87h,con_pc,0.3041,0.0035,200
it87h,con_oecdm,0.2871,0.0033,200
it87h,con_ae,0.2912,0.0034,200
[1] "Loading dataset it89h..."
it89h,market_hh,0.5084,0.006,200
it89h,market_sqrt,0.4294,0.0047,200
it89h,market_pc,0.4564,0.0072,200
it89h,market_oecdm,0.4336,0.005,200
it89h,market_ae,0.4414,0.0056,200
it89h,gross_hh,0.3476,0.0048,200
it89h,gross_sqrt,0.3039,0.0043,200
it89h,gross_pc,0.3263,0.0057,200
it89h,gross_oecdm,0.3033,0.004,200
it89h,gross_ae,0.3096,0.0048,200
it89h,disp_hh,0.3476,0.0053,200
it89h,disp_sqrt,0.3039,0.0043,200
it89h,disp_pc,0.3263,0.0051,200
it89h,disp_oecdm,0.3033,0.0039,200
it89h,disp_ae,0.3096,0.0048,200
it89h,con_hh,0.3027,0.0038,200
it89h,con_sqrt,0.2512,0.0034,200
it89h,con_pc,0.2756,0.0039,200
it89h,con_oecdm,0.2524,0.0033,200
it89h,con_ae,0.2586,0.0029,200
[1] "Loading dataset it91h..."
it91h,market_hh,0.4953,0.0065,200
it91h,market_sqrt,0.4175,0.0061,200
it91h,market_pc,0.4446,0.0069,200
it91h,market_oecdm,0.4222,0.0055,200
it91h,market_ae,0.4298,0.0053,200
it91h,gross_hh,0.3355,0.0052,200
it91h,gross_sqrt,0.2923,0.0044,200
it91h,gross_pc,0.3147,0.0051,200
it91h,gross_oecdm,0.2914,0.0043,200
it91h,gross_ae,0.2976,0.004,200
it91h,disp_hh,0.3355,0.0047,200
it91h,disp_sqrt,0.2923,0.0042,200
it91h,disp_pc,0.3147,0.005,200
it91h,disp_oecdm,0.2914,0.0044,200
it91h,disp_ae,0.2976,0.0053,200
it91h,con_hh,0.3019,0.0042,200
it91h,con_sqrt,0.2548,0.0036,200
it91h,con_pc,0.2817,0.0046,200
it91h,con_oecdm,0.257,0.0036,200
it91h,con_ae,0.2639,0.0035,200
[1] "Loading dataset it93h..."
it93h,market_hh,0.5491,0.0065,200
it93h,market_sqrt,0.4757,0.0054,200
it93h,market_pc,0.4932,0.0056,200
it93h,market_oecdm,0.4789,0.0054,200
it93h,market_ae,0.4837,0.0055,200
it93h,gross_hh,0.3804,0.004,200
it93h,gross_sqrt,0.3426,0.0046,200
it93h,gross_pc,0.3554,0.005,200
it93h,gross_oecdm,0.3406,0.0052,200
it93h,gross_ae,0.3439,0.0045,200
it93h,disp_hh,0.3804,0.0047,200
it93h,disp_sqrt,0.3426,0.0047,200
it93h,disp_pc,0.3554,0.0049,200
it93h,disp_oecdm,0.3406,0.0041,200
it93h,disp_ae,0.3439,0.0046,200
it93h,con_hh,0.3035,0.0039,200
it93h,con_sqrt,0.2649,0.0039,200
it93h,con_pc,0.292,0.0039,200
it93h,con_oecdm,0.2685,0.0032,200
it93h,con_ae,0.275,0.0035,200
[1] "Loading dataset it95h..."
it95h,market_hh,0.5498,0.0058,200
it95h,market_sqrt,0.4767,0.0064,200
it95h,market_pc,0.4923,0.0059,200
it95h,market_oecdm,0.4786,0.0063,200
it95h,market_ae,0.483,0.0054,200
it95h,gross_hh,0.373,0.0044,200
it95h,gross_sqrt,0.3398,0.0058,200
it95h,gross_pc,0.3537,0.0056,200
it95h,gross_oecdm,0.3368,0.0049,200
it95h,gross_ae,0.3407,0.0051,200
it95h,disp_hh,0.373,0.0047,200
it95h,disp_sqrt,0.3398,0.0059,200
it95h,disp_pc,0.3537,0.0053,200
it95h,disp_oecdm,0.3368,0.0051,200
it95h,disp_ae,0.3407,0.005,200
it95h,con_hh,0.2695,0.003,200
it95h,con_sqrt,0.2305,0.0031,200
it95h,con_pc,0.263,0.003,200
it95h,con_oecdm,0.2329,0.0029,200
it95h,con_ae,0.2416,0.0034,200
[1] "Loading dataset it98h..."
it98h,market_hh,0.558,0.0072,200
it98h,market_sqrt,0.4848,0.0082,200
it98h,market_pc,0.5056,0.0081,200
it98h,market_oecdm,0.4887,0.0084,200
it98h,market_ae,0.4942,0.0073,200
it98h,gross_hh,0.3858,0.0058,200
it98h,gross_sqrt,0.3483,0.0065,200
it98h,gross_pc,0.367,0.0075,200
it98h,gross_oecdm,0.3474,0.0061,200
it98h,gross_ae,0.3523,0.0067,200
it98h,disp_hh,0.3858,0.0063,200
it98h,disp_sqrt,0.3483,0.0064,200
it98h,disp_pc,0.367,0.0059,200
it98h,disp_oecdm,0.3474,0.0058,200
it98h,disp_ae,0.3523,0.0061,200
it98h,con_hh,0.297,0.0043,200
it98h,con_sqrt,0.2646,0.0043,200
it98h,con_pc,0.2981,0.0038,200
it98h,con_oecdm,0.2692,0.0039,200
it98h,con_ae,0.2778,0.0044,200
[1] "Loading dataset it00h..."
it00h,market_hh,0.5497,0.0064,200
it00h,market_sqrt,0.4762,0.0058,200
it00h,market_pc,0.4978,0.0067,200
it00h,market_oecdm,0.4796,0.0045,200
it00h,market_ae,0.4856,0.0063,200
it00h,gross_hh,0.3708,0.0044,200
it00h,gross_sqrt,0.3348,0.0051,200
it00h,gross_pc,0.3526,0.0049,200
it00h,gross_oecdm,0.3326,0.0049,200
it00h,gross_ae,0.3375,0.0044,200
it00h,disp_hh,0.3708,0.0047,200
it00h,disp_sqrt,0.3348,0.0057,200
it00h,disp_pc,0.3526,0.0055,200
it00h,disp_oecdm,0.3326,0.0054,200
it00h,disp_ae,0.3375,0.0044,200
it00h,con_hh,0.2825,0.0031,200
it00h,con_sqrt,0.2464,0.0031,200
it00h,con_pc,0.2814,0.0034,200
it00h,con_oecdm,0.2503,0.0033,200
it00h,con_ae,0.2595,0.0031,200
[1] "Loading dataset it04h..."
it04h,market_hh,0.5649,0.0066,200
it04h,market_sqrt,0.4949,0.0061,200
it04h,market_pc,0.5232,0.0059,200
it04h,market_oecdm,0.4996,0.0063,200
it04h,market_ae,0.5075,0.0063,200
it04h,gross_hh,0.3642,0.0055,200
it04h,gross_sqrt,0.3326,0.0056,200
it04h,gross_pc,0.3565,0.006,200
it04h,gross_oecdm,0.3321,0.0056,200
it04h,gross_ae,0.3385,0.0057,200
it04h,disp_hh,0.3642,0.0046,200
it04h,disp_sqrt,0.3326,0.005,200
it04h,disp_pc,0.3565,0.006,200
it04h,disp_oecdm,0.3321,0.0061,200
it04h,disp_ae,0.3385,0.006,200
it04h,con_hh,0.2806,0.0032,200
it04h,con_sqrt,0.2528,0.0032,200
it04h,con_pc,0.2985,0.0038,200
it04h,con_oecdm,0.2584,0.0028,200
it04h,con_ae,0.2711,0.0034,200
[1] "Loading dataset it08h..."
it08h,market_hh,0.5536,0.0057,200
it08h,market_sqrt,0.4783,0.0066,200
it08h,market_pc,0.5024,0.0062,200
it08h,market_oecdm,0.4809,0.0062,200
it08h,market_ae,0.4875,0.0062,200
it08h,gross_hh,0.3607,0.0055,200
it08h,gross_sqrt,0.326,0.0053,200
it08h,gross_pc,0.3477,0.0053,200
it08h,gross_oecdm,0.324,0.0064,200
it08h,gross_ae,0.3297,0.006,200
it08h,disp_hh,0.3607,0.0047,200
it08h,disp_sqrt,0.326,0.0057,200
it08h,disp_pc,0.3477,0.0055,200
it08h,disp_oecdm,0.324,0.0063,200
it08h,disp_ae,0.3297,0.0059,200
it08h,con_hh,0.264,0.003,200
it08h,con_sqrt,0.2342,0.0034,200
it08h,con_pc,0.2819,0.003,200
it08h,con_oecdm,0.2401,0.0035,200
it08h,con_ae,0.2529,0.0034,200
[1] "Loading dataset it10h..."
it10h,market_hh,0.5603,0.0064,200
it10h,market_sqrt,0.4874,0.0063,200
it10h,market_pc,0.5126,0.0054,200
it10h,market_oecdm,0.4909,0.0065,200
it10h,market_ae,0.4976,0.0057,200
it10h,gross_hh,0.3543,0.0047,200
it10h,gross_sqrt,0.3233,0.0045,200
it10h,gross_pc,0.348,0.0054,200
it10h,gross_oecdm,0.3228,0.0041,200
it10h,gross_ae,0.3292,0.0041,200
it10h,disp_hh,0.3543,0.005,200
it10h,disp_sqrt,0.3233,0.0048,200
it10h,disp_pc,0.348,0.0049,200
it10h,disp_oecdm,0.3228,0.0057,200
it10h,disp_ae,0.3292,0.0046,200
it10h,con_hh,0.2708,0.0033,200
it10h,con_sqrt,0.243,0.0038,200
it10h,con_pc,0.2892,0.0041,200
it10h,con_oecdm,0.2481,0.0036,200
it10h,con_ae,0.2608,0.0032,200
[1] "Loading dataset it14h..."
it14h,market_hh,0.6117,0.0058,120
it14h,market_sqrt,0.5441,0.0057,120
it14h,market_pc,0.5651,0.0068,120
it14h,market_oecdm,0.5474,0.0061,120
it14h,market_ae,0.5529,0.0066,120
it14h,gross_hh,0.4148,0.0046,120
it14h,gross_sqrt,0.3872,0.0055,120
it14h,gross_pc,0.4086,0.0061,120
it14h,gross_oecdm,0.3881,0.0054,120
it14h,gross_ae,0.3934,0.0065,120
it14h,disp_hh,0.3644,0.0046,120
it14h,disp_sqrt,0.3325,0.0056,120
it14h,disp_pc,0.3605,0.005,120
it14h,disp_oecdm,0.3336,0.0051,120
it14h,disp_ae,0.3407,0.0056,120
it14h,con_hh,0.2716,0.003,120
it14h,con_sqrt,0.2507,0.0032,120
it14h,con_pc,0.305,0.0034,120
it14h,con_oecdm,0.2569,0.0031,120
it14h,con_ae,0.2724,0.0032,120
[1] "Loading dataset it16h..."
it16h,market_hh,0.6184,0.0067,120
it16h,market_sqrt,0.5534,0.0065,120
it16h,market_pc,0.5725,0.0066,120
it16h,market_oecdm,0.5555,0.0071,120
it16h,market_ae,0.5605,0.0066,120
it16h,gross_hh,0.4242,0.0061,120
it16h,gross_sqrt,0.3973,0.008,120
it16h,gross_pc,0.4143,0.006,120
it16h,gross_oecdm,0.3971,0.0067,120
it16h,gross_ae,0.4009,0.0065,120
it16h,disp_hh,0.3723,0.0053,120
it16h,disp_sqrt,0.3402,0.0062,120
it16h,disp_pc,0.3639,0.0065,120
it16h,disp_oecdm,0.3403,0.0066,120
it16h,disp_ae,0.346,0.0056,120
it16h,con_hh,0.3159,0.0045,120
it16h,con_sqrt,0.292,0.0054,120
it16h,con_pc,0.3393,0.0045,120
it16h,con_oecdm,0.2978,0.0046,120
it16h,con_ae,0.311,0.0046,120
> 
> proc.time()
   user  system elapsed 
231.852   5.199 366.056 


